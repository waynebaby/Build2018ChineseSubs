WEBVTT

00:00:00.000 --> 00:00:01.950
>> Hi，每个人。我 Atin Bansal，

00:00:01.950 --> 00:00:06.015
今天我将会说，
向你 VSTS Wiki。

00:00:06.015 --> 00:00:08.795
遗憾的是 Sandeep
就不能够加入我们。

00:00:08.795 --> 00:00:10.905
他是 VSTS Wiki 的所有者。

00:00:10.905 --> 00:00:13.400
但您可以与任何一个
我们上 Twitter 手柄

00:00:13.400 --> 00:00:16.685
此处列出的任何反馈信息
也有的问题。

00:00:16.685 --> 00:00:18.900
之前我跳转到演示中，

00:00:18.900 --> 00:00:22.225
我想谈一谈为什么
我们创建了 VSTS Wiki。

00:00:22.225 --> 00:00:25.915
我们想要使其真正成为
为团队创建，很容易

00:00:25.915 --> 00:00:27.840
过程、 项目

00:00:27.840 --> 00:00:31.495
和开发中的文档
一种非常简单的方式。

00:00:31.495 --> 00:00:35.575
我们也谈一谈
三项基础技术

00:00:35.575 --> 00:00:40.870
这帮助我们创建
VSTS Wiki，第一次在 git 中获取。

00:00:40.870 --> 00:00:43.300
GIT 是一种技术
全球范围内使用

00:00:43.300 --> 00:00:45.710
对于数以百万计的
源代码控制存储库，

00:00:45.710 --> 00:00:49.410
那就是后备
也 VSTS Wiki。

00:00:49.410 --> 00:00:51.225
第二个是减价。

00:00:51.225 --> 00:00:53.815
减价已成为
我们的文档标准

00:00:53.815 --> 00:00:55.975
跨多个平台，

00:00:55.975 --> 00:00:58.415
这就是我们
在 VSTS Wiki 中使用。

00:00:58.415 --> 00:01:01.010
第三个是弹性的搜索，

00:01:01.010 --> 00:01:03.970
这为我们提供了电源
要编制索引的所有内容

00:01:03.970 --> 00:01:07.420
放到 Wiki
并使其可检测到。

00:01:07.420 --> 00:01:09.790
因此让我们看演示。

00:01:09.790 --> 00:01:12.905
对于演示，我将
使用两个角色，

00:01:12.905 --> 00:01:15.480
约翰，是业务分析师，

00:01:15.480 --> 00:01:18.240
和杰西卡，是开发人员。

00:01:18.240 --> 00:01:22.445
约翰想要简化
然而丰富的经验

00:01:22.445 --> 00:01:23.995
对于他的文档。

00:01:23.995 --> 00:01:27.020
但是，杰西卡，谁
为共同开发人员，

00:01:27.020 --> 00:01:29.255
想要东西的
她是非常熟悉。

00:01:29.255 --> 00:01:30.680
她不想进入

00:01:30.680 --> 00:01:33.185
为单独的空间
做她的文档。

00:01:33.185 --> 00:01:36.895
她想要的东西的
与她使用对齐

00:01:36.895 --> 00:01:38.905
它是 ID。 大多数情况下

00:01:38.905 --> 00:01:41.740
支持工作流
该她已习惯

00:01:41.740 --> 00:01:44.030
并且能够适应

00:01:44.030 --> 00:01:46.645
她的 API 和 SDK
文档的需要。

00:01:46.645 --> 00:01:48.890
其他需要的两个约翰和

00:01:48.890 --> 00:01:51.650
杰西卡已是
到处都发现。

00:01:51.650 --> 00:01:54.110
他们两个想要
文档他们

00:01:54.110 --> 00:01:56.520
写被发现
通过其他的人。

00:01:56.520 --> 00:02:00.620
因此让我们看看如何 VSTS Wiki
使您可以执行此操作。

00:02:00.620 --> 00:02:03.745
我们首先在张三的角色。

00:02:03.745 --> 00:02:07.550
我将向前移动
向我演示的项目，

00:02:07.550 --> 00:02:10.670
并认为 John 说
并在此 Wiki 选项卡上单击

00:02:10.670 --> 00:02:13.715
他看到两个 CD： 创建 Wiki，

00:02:13.715 --> 00:02:15.590
并将发布代码作为 Wiki。

00:02:15.590 --> 00:02:17.380
我们将会发布
代码为 Wiki 以后。

00:02:17.380 --> 00:02:20.345
让我们继续操作并单击
在现在的创建 wiki。

00:02:20.345 --> 00:02:23.350
在发生了什么变化
这里的背景是，

00:02:23.350 --> 00:02:26.510
GIT repo 有规定
为此 Wiki。

00:02:26.510 --> 00:02:29.385
但是，John 是完全
与直观。

00:02:29.385 --> 00:02:31.020
他看到一个很好的页面，

00:02:31.020 --> 00:02:33.180
我们只调用他
放置在页面的标题中。

00:02:33.180 --> 00:02:37.450
因此，让我们放在一页中
名为"我第一个标题

00:02:37.450 --> 00:02:42.995
页上，"并保存它，
然后我们关闭这。

00:02:42.995 --> 00:02:46.175
正如您所看到的页面
已创建

00:02:46.175 --> 00:02:48.080
然后它会出现在
在右边，

00:02:48.080 --> 00:02:49.960
和某种程度上像一个表
将的内容的

00:02:49.960 --> 00:02:52.245
可以启动生成
自动为您。

00:02:52.245 --> 00:02:54.930
现在让我们创建一个新页。

00:03:00.290 --> 00:03:03.920
因此，我想要快速
谈一谈什么

00:03:03.920 --> 00:03:07.135
是的能力
我们提供的 Wiki。

00:03:07.135 --> 00:03:09.090
显然，您可以开始使用

00:03:09.090 --> 00:03:14.485
普通减价的语法
如果我可以拼写正确。

00:03:14.485 --> 00:03:17.860
但正如您所看到的我们实际上
有实时预览 pin 码。

00:03:17.860 --> 00:03:20.110
在此处写入任何显示

00:03:20.110 --> 00:03:23.350
这里它将如何使用
实际上，看上去给最终用户。

00:03:23.350 --> 00:03:27.190
现在，我认为这是
非常棒，因为

00:03:27.190 --> 00:03:28.570
否则我所要做是，

00:03:28.570 --> 00:03:31.180
要键入的内容
并希望这是正确的

00:03:31.180 --> 00:03:32.540
然后保存它，

00:03:32.540 --> 00:03:34.790
单击以预览
其他一些地方，

00:03:34.790 --> 00:03:36.790
并且真正看到它，然后说，

00:03:36.790 --> 00:03:39.455
"这看起来不好让
我回过头来再次执行它。"

00:03:39.455 --> 00:03:41.260
但是，在这里，您
实际上能够

00:03:41.260 --> 00:03:43.750
立刻更改内容

00:03:43.750 --> 00:03:47.095
因为你能够看到
它在右边。

00:03:47.095 --> 00:03:49.420
因此，我们假设
我们正在创建

00:03:49.420 --> 00:03:50.840
Wiki 页面，我们想要链接

00:03:50.840 --> 00:03:53.010
它到其他页面上
在 Wiki。

00:03:53.010 --> 00:03:55.005
这里在顶部，我们有

00:03:55.005 --> 00:03:56.790
便捷的快捷方式，您可以使用。

00:03:56.790 --> 00:04:00.855
因此，我将快速地使用
该快捷方式，然后我会说"链接

00:04:00.855 --> 00:04:07.165
到第一页，因此您可以键入，

00:04:07.165 --> 00:04:10.340
然后只要他们
进入实际页

00:04:10.340 --> 00:04:14.825
VSTS Wiki 显示所有您
Wiki 中的页面

00:04:14.825 --> 00:04:17.420
您可以搜索并查找

00:04:17.420 --> 00:04:21.195
你的页面
寻找并将其链接。

00:04:21.195 --> 00:04:23.270
现在，我还可以链接

00:04:23.270 --> 00:04:26.345
通过这样做同样的事情
表示法我自己，

00:04:26.345 --> 00:04:29.000
并再次获得相同的电源
要查找的搜索

00:04:29.000 --> 00:04:31.690
页面和链接页面。

00:04:31.690 --> 00:04:35.185
或者，我可以转到
我的表格的内容，

00:04:35.185 --> 00:04:37.430
拖动和
在这里，删除该网页

00:04:37.430 --> 00:04:38.720
它仍将
创建链接

00:04:38.720 --> 00:04:41.050
您可以在看到
右手边。

00:04:41.050 --> 00:04:43.570
那么，还有什么以外的其他

00:04:43.570 --> 00:04:45.760
我们放入的链接
到 Wiki 页？

00:04:45.760 --> 00:04:47.560
当然，图片
是的

00:04:47.560 --> 00:04:49.705
我想放在我的 Wiki 页面。

00:04:49.705 --> 00:04:51.690
但是，我认为到图片

00:04:51.690 --> 00:04:54.390
GIT 存储库是很难的。

00:04:54.390 --> 00:04:55.980
我需要一个快照，

00:04:55.980 --> 00:04:57.230
我必须将它保存到磁盘，

00:04:57.230 --> 00:04:58.770
我需要上载
它给我的 GIT repo，

00:04:58.770 --> 00:05:01.065
然后引用它
从我减价的页面。

00:05:01.065 --> 00:05:04.125
在 VSTS Wiki 很简单得多。

00:05:04.125 --> 00:05:05.880
因此，假定这是一个页面

00:05:05.880 --> 00:05:07.590
您想要关闭，拍快照

00:05:07.590 --> 00:05:10.630
我只是在我管理单元工具中，做其新

00:05:10.640 --> 00:05:16.775
选择管理单元这里
"控制 V"和完成。

00:05:16.775 --> 00:05:19.020
我有的链接
在这里，图像

00:05:19.020 --> 00:05:20.220
和我有实际的预览

00:05:20.220 --> 00:05:22.590
该图像就在这里在页上。

00:05:22.590 --> 00:05:24.765
几秒钟后，就是这样。

00:05:24.765 --> 00:05:26.985
此外与 Gatwick，电源

00:05:26.985 --> 00:05:28.170
我们将

00:05:28.170 --> 00:05:30.945
数学公式
应到 Wiki。

00:05:30.945 --> 00:05:38.620
那么，我可以只做
E 等于 MC 平方，

00:05:39.260 --> 00:05:41.730
如您所看到的
在右边，

00:05:41.730 --> 00:05:43.970
它已成为
等于 MC 平方，

00:05:43.970 --> 00:05:45.780
公式的实际
数学家

00:05:45.780 --> 00:05:47.790
可以查看并理解。

00:05:47.790 --> 00:05:50.100
这是一个简单的公式
您可能会说。

00:05:50.100 --> 00:05:56.200
因此，让我复制和粘贴
更真实生活中的示例。

00:05:57.770 --> 00:06:03.015
那里，我刚粘贴
更有意义的公式中，

00:06:03.015 --> 00:06:05.385
并且您有权限
数学符号

00:06:05.385 --> 00:06:07.050
它出现在
右手边。

00:06:07.050 --> 00:06:09.220
让我切换

00:06:09.220 --> 00:06:11.815
对不同的 Wiki 的我
有一段时间重新创建。

00:06:11.815 --> 00:06:13.330
我将向您展示的威力

00:06:13.330 --> 00:06:17.735
什么减价和嵌入
我们支持的 STML 可以做到。

00:06:17.735 --> 00:06:19.965
您可以创建页面如下，

00:06:19.965 --> 00:06:22.710
或者像这样使用电源

00:06:22.710 --> 00:06:27.105
减价的
在 VSTS Wiki STML。

00:06:27.105 --> 00:06:31.220
固有的这样一件事
Wiki 排序的页面，

00:06:31.220 --> 00:06:32.940
和页面的层次结构。

00:06:32.940 --> 00:06:35.685
这是非常简单
为此在 VSTS Wiki。

00:06:35.685 --> 00:06:37.275
我可以在页上，单击

00:06:37.275 --> 00:06:40.510
并快速创建子页

00:06:41.840 --> 00:06:45.525
并保存它，并象您看到的

00:06:45.525 --> 00:06:49.020
我有子页面现在内
Azure 的活动目录。

00:06:49.020 --> 00:06:52.625
我可以移动此页
大约要成为

00:06:52.625 --> 00:06:55.810
子页面的人
其他，如上所示。

00:06:55.810 --> 00:06:59.120
其他方面的问题
在周围移动页，

00:06:59.120 --> 00:07:01.445
为该链接获取
很容易折断。

00:07:01.445 --> 00:07:03.365
因此，我将关闭此对话框，

00:07:03.365 --> 00:07:05.930
但要在移动时
在 Wiki 页面周围

00:07:05.930 --> 00:07:08.540
但这些网页
相互关联

00:07:08.540 --> 00:07:11.120
它是很容易断开了
在首选项链接

00:07:11.120 --> 00:07:14.315
链接已断开
由于页面已经移走。

00:07:14.315 --> 00:07:17.210
因此，现在什么 VSTS Wiki
使您可以执行此操作，

00:07:17.210 --> 00:07:19.315
如果在移动此页或已被

00:07:19.315 --> 00:07:22.080
要说子页面
家庭，VSTS 的

00:07:22.080 --> 00:07:23.180
它允许您检查

00:07:23.180 --> 00:07:26.320
在有效链接
其余的页

00:07:26.320 --> 00:07:29.500
并推出
不只是网页链接

00:07:29.500 --> 00:07:31.105
这可能是损坏
移动，

00:07:31.105 --> 00:07:32.590
但也工作项链接

00:07:32.590 --> 00:07:34.360
将接收中断
移动，

00:07:34.360 --> 00:07:37.060
而不是您
无需去修复它，

00:07:37.060 --> 00:07:39.675
它实际上解决它了，

00:07:39.675 --> 00:07:40.845
然后移动该页面。

00:07:40.845 --> 00:07:43.585
因此，所有对我有
说是修复及移动，

00:07:43.585 --> 00:07:46.885
现在将 VSTS Wiki 和
关闭固定页，

00:07:46.885 --> 00:07:52.790
然后进行我的页面
Wiki 主页的子网页。

00:07:53.600 --> 00:07:59.474
因此，尽管约翰正在处理
VSTS Wiki 用户界面，杰西卡，

00:07:59.474 --> 00:08:00.960
我们共同的开发人员，是谁

00:08:00.960 --> 00:08:03.285
正如我所说不
想要在 UI 中，

00:08:03.285 --> 00:08:05.235
她想要在该 id。

00:08:05.235 --> 00:08:10.485
在这里，可以看到杰西卡
URL 的 Wiki，

00:08:10.485 --> 00:08:14.480
并实际克隆到
她桌面使其离线和

00:08:14.480 --> 00:08:18.500
在像她一样的 Wiki 页面上工作
将所从事的任何代码文件，

00:08:18.500 --> 00:08:19.580
回来和创建

00:08:19.580 --> 00:08:22.015
对于拉请求
Wiki 的文档。

00:08:22.015 --> 00:08:23.790
如此简单。
因此，我们满足

00:08:23.790 --> 00:08:27.240
两张三的角色
和杰西卡的角色。

00:08:27.240 --> 00:08:31.610
但是，当我们采访
像杰西卡，角色

00:08:31.610 --> 00:08:33.380
我们意识到它不是

00:08:33.380 --> 00:08:36.370
只需让
脱机，Wiki 网页

00:08:36.370 --> 00:08:40.040
杰西卡已有
大量的文档

00:08:40.040 --> 00:08:44.045
存储在代码库中
同时她实际的代码。

00:08:44.045 --> 00:08:45.970
这是 API 级别文档

00:08:45.970 --> 00:08:47.495
是关键级文档，

00:08:47.495 --> 00:08:49.400
她已被
写了很长时间。

00:08:49.400 --> 00:08:53.265
但有四个问题
这些角色会遇到。

00:08:53.265 --> 00:08:55.550
第一，任何人谁

00:08:55.550 --> 00:08:57.200
想要读取
它们的文档

00:08:57.200 --> 00:08:59.855
实际上必须筛选
通过所有的代码，

00:08:59.855 --> 00:09:01.820
并找到文档。

00:09:01.820 --> 00:09:05.380
第二，如果该产品
有多个版本，

00:09:05.380 --> 00:09:08.875
该文档
很难维护。

00:09:08.875 --> 00:09:10.880
第三步，没有

00:09:10.880 --> 00:09:13.625
文件没有排序
在 GIT 存储库，

00:09:13.625 --> 00:09:16.990
Wiki 是本质上是
基于排序。

00:09:16.990 --> 00:09:20.560
数字四，没有
简单的方法来发现

00:09:20.560 --> 00:09:22.240
页和
有的文档

00:09:22.240 --> 00:09:23.920
已编写的
代码存储库。

00:09:23.920 --> 00:09:28.405
因此让我们看看如何 VSTS Wiki
解决了以下四个问题。

00:09:28.405 --> 00:09:29.590
我将回到

00:09:29.590 --> 00:09:31.930
原始项目
我们正在处理中，

00:09:31.930 --> 00:09:36.390
我将转到"代码"

00:09:36.390 --> 00:09:37.500
正如您可以看到没有，

00:09:37.500 --> 00:09:39.225
正在编写的某些代码

00:09:39.225 --> 00:09:40.830
我知道，

00:09:40.830 --> 00:09:42.990
另外，还有
产品级别的文档

00:09:42.990 --> 00:09:44.955
它驻留
旁边的代码。

00:09:44.955 --> 00:09:48.255
因此，若要发布
本文档为 Wiki，

00:09:48.255 --> 00:09:51.300
我将转到 Wiki，并在上单击"

00:09:51.300 --> 00:09:54.765
作为 Wiki 发布代码。"就是这样。

00:09:54.765 --> 00:09:56.180
您已经选择 repo
从中您

00:09:56.180 --> 00:09:57.935
希望文档
挑选，

00:09:57.935 --> 00:10:00.779
分支，该文件夹，

00:10:00.779 --> 00:10:03.315
这是文档引用的概念

00:10:03.315 --> 00:10:10.110
然后我们进入我们的 Wiki 名称
然后单击"发布"。

00:10:10.110 --> 00:10:12.640
就是这样。什么
现在发生的情况是，

00:10:12.640 --> 00:10:14.500
实际上，我们将

00:10:14.500 --> 00:10:16.975
该文件夹和子文件夹
指定的您，

00:10:16.975 --> 00:10:18.760
查找所有减价文件

00:10:18.760 --> 00:10:24.320
和创建 Wiki 的
您从这些页面。

00:10:24.380 --> 00:10:26.930
现在，它不
我们复制的平均值

00:10:26.930 --> 00:10:28.935
所有到 Wiki，这些页面

00:10:28.935 --> 00:10:30.590
这些都是网页的

00:10:30.590 --> 00:10:32.570
仍居住在该代码 repo，

00:10:32.570 --> 00:10:35.690
但已经成为这样
到现在为止要容易得多

00:10:35.690 --> 00:10:37.575
阅读并穿过
对于任何人谁

00:10:37.575 --> 00:10:40.580
尝试查找
代码的文档。

00:10:40.580 --> 00:10:43.155
现在，我们讨论了版本。

00:10:43.155 --> 00:10:46.610
假定此产品
还有一个版本 0.7

00:10:46.610 --> 00:10:48.390
有一段时间后形状

00:10:48.390 --> 00:10:50.215
和非常类似于

00:10:50.215 --> 00:10:52.270
文档的方法
被写下来，

00:10:52.270 --> 00:10:54.595
它还编写
该版本。

00:10:54.595 --> 00:10:58.225
VSTS Wiki 使它
非常简单现在到

00:10:58.225 --> 00:11:00.130
发布多个的版本

00:11:00.130 --> 00:11:02.050
文档
相同的产品。

00:11:02.050 --> 00:11:04.210
我所要做的就是
单击"发布

00:11:04.210 --> 00:11:06.160
新版本中，"点

00:11:06.160 --> 00:11:08.530
有分支

00:11:08.530 --> 00:11:09.700
具有版本

00:11:09.700 --> 00:11:12.455
一个文档，然后
单击"更新"。

00:11:12.455 --> 00:11:15.660
完成。任何人谁现在
在此页上的领土

00:11:15.660 --> 00:11:18.665
可以看到有
本产品的两个版本

00:11:18.665 --> 00:11:20.460
或者，本文档中，

00:11:20.460 --> 00:11:24.740
母版和版本 0.7
并据此选择。

00:11:25.180 --> 00:11:28.205
第三个问题
当我们谈论

00:11:28.205 --> 00:11:30.050
排序的文件。

00:11:30.050 --> 00:11:32.330
在 GIT 存储库中，那里

00:11:32.330 --> 00:11:34.550
没有内在的排序的文件，

00:11:34.550 --> 00:11:37.265
因此，Wiki 是
是一种平面结构

00:11:37.265 --> 00:11:40.400
有的页的
在 GIT 存储库。

00:11:40.400 --> 00:11:43.945
但是，您可以更改
在 VSTS Wiki 的。

00:11:43.945 --> 00:11:46.620
让我回到
文档引用的概念，

00:11:46.620 --> 00:11:53.760
添加文件和这里的 called.order。

00:11:53.760 --> 00:11:57.010
这是该 VSTS 的文件
Wiki 使用维护

00:11:57.010 --> 00:12:00.595
层次结构和订购
Wiki 网站上的页。

00:12:00.595 --> 00:12:02.905
因此，在这里，我们假设
我们只是希望

00:12:02.905 --> 00:12:04.750
节点 SDK Azure 安装

00:12:04.750 --> 00:12:06.875
若要将第一页
了。

00:12:06.875 --> 00:12:16.095
我将会在这，和完成。

00:12:16.095 --> 00:12:17.715
现在，当我回到 Wiki，

00:12:17.715 --> 00:12:22.080
到版本 7，为

00:12:22.080 --> 00:12:24.520
您可以看到该节点
SDK Azure 安装

00:12:24.520 --> 00:12:26.480
是显示的第一页。

00:12:26.480 --> 00:12:29.620
我想最后一件事情
讨论的是发现。

00:12:29.620 --> 00:12:31.330
文档是无用如果

00:12:31.330 --> 00:12:33.815
没有其他人可以
找到它，看到它。

00:12:33.815 --> 00:12:36.525
因此，此处使用
在顶部的搜索框中

00:12:36.525 --> 00:12:40.780
您可以查找文档

00:12:40.780 --> 00:12:44.290
刚刚发布的
代码存储库或 Wiki。

00:12:44.290 --> 00:12:46.600
因此，如果搜索 Azure 节点

00:12:46.600 --> 00:12:50.610
您将看到所有页的
其中，有 Azure 的节点

00:12:50.610 --> 00:12:52.420
无论
在标题或

00:12:52.420 --> 00:12:54.475
在该页面的实际正文

00:12:54.475 --> 00:12:58.030
并使 Wiki 网页
更容易找到，

00:12:58.030 --> 00:12:59.200
因此，可以帮助人们，

00:12:59.200 --> 00:13:00.940
找到他们正在寻找的内容。

00:13:00.940 --> 00:13:06.860
因此，回到
我们的 dec，总之，

00:13:06.860 --> 00:13:10.155
VSTS Wiki 允许您
创建项目的过程中，

00:13:10.155 --> 00:13:12.410
或开发中的文档

00:13:12.410 --> 00:13:14.600
非常简单，
简化的方式。

00:13:14.600 --> 00:13:18.230
它支持减价，
使用 GIT，电源

00:13:18.230 --> 00:13:20.120
并使您能够

00:13:20.120 --> 00:13:23.495
Ubiquities 的发现
所有 Wiki 页面。

00:13:23.495 --> 00:13:25.970
如果您想要知道
VST 的 Wiki，有关的详细信息

00:13:25.970 --> 00:13:29.000
转到 aka.ms/devopswiki，

00:13:29.000 --> 00:13:30.945
欢迎随时与我们联系，并

00:13:30.945 --> 00:13:32.570
我或 Sandeep，

00:13:32.570 --> 00:13:34.355
只要您有
提交问题或反馈上

00:13:34.355 --> 00:13:37.170
VSTS Wiki。非常感谢。

